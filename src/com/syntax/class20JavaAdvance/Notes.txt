WHAT IS INHERITANCE?
    is a mechanism in java through which one class acquires the properties and methods of
    another class. it is one of the main four pillars of OOPS
Why we should use Inheritance:
    1) it helps reduce the amount of code that we have to write.
    2) it is more efficient.
    3) Saves memory.
How we can use Inheritance:
    we can use the EXTENT KEYWORD  after the class name and then the name of the class
    from which we want to inherit the code.

    Example:

class Parent{
String name="Newton";
String eyeColor="brown";
}
class Child extends Parent{

public void printInfo(){
System.out.println(name+" "+eyeColor);
}
}

TYPES OF INHERITANCE:
    Different languages support different types of inheritances but 5 are very common.
    1) Single Inheritance.-->NOT POPULAR==> ONLY TWO CLASSES, ONLY ONE PARENT AND ONE CHILD.

    2) multilevel Inheritance. ONLY ONE PARENT->CHILD->GRAND CHILD
    THE EXTENDS KEYWORD WILL HAVE THE  NAME  OF THE CLASS BEFORE LIKE A STAIRCASE
    NOT THE PARENT EVEN THOUGH EVERYTHING IS BEING INHERITANCE FROM PARENT CLASS AND ALL OF THE ABOVE.

    3) hierarchical Inheritance. ONLY ONE PARENT AND MULTIPLE CHILDREN.
       THE KEYWORD EXTENDS WILL ALWAYS HAVE THE PARENT CLASS NAME.

    4) multiple Inheritance. NOT SUPPORTED WITH JAVA;
                            PROBLEMS WITH THIS IS CALLED DIAMOND PROBLEM-> SOME FIELDS CAN BE THE SAME WITH DIFFERENT VALUES

    5) Hybrid Inheritance.-->MOST POPULAR
1) Single Inheritance:

NOT POSSIBLE IN INHERITANCE:
       1. Private members of the superclass are not inherited by the subclass
       and can only be indirectly accessed.
       2. Members that have default accessibility in the superclass are also
       not inherited by subclasses in other packages, as these members are
       only accessible by their simple names in subclasses within the same
       package as the superclass. Unless you make them protected to be able to access them.
       3. Since constructors and initializer blocks are not members of a class, (fields and method are part of a class)
       they are not inherited by a subclass.
       4. A subclass can extend only one superclass